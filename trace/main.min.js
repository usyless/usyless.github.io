const eventListeners$$module$popups=[],onclosefuncs$$module$popups=[];
async function createPopup$$module$popups(a,{listeners:b=[],buttons:c,classes:d=[],onclose:e}={}){clearPopups$$module$popups();return new Promise(n=>{const g=document.createElement("div"),m=document.createElement("div"),h=document.createElement("div");g.setAttribute("usy-overlay","");g.classList.add("fullscreen","blur");m.classList.add("popupOuter",...d);h.classList.add("popupInner",...d);const f=[];if("string"===typeof a){var l=document.createElement("div");l.classList.add("popupText");l.textContent=
a;f.push(l)}else Array.isArray(a)?f.push(...a):f.push(a);m.appendChild(h);if(null!=c)l=c;else{l=document.createElement("div");l.classList.add("popupButtons");const k=document.createElement("button");k.classList.add("standardButton");k.textContent="Ok";l.appendChild(k);k.addEventListener("click",()=>{clearPopups$$module$popups();n(!0)})}h.append(...f,l);g.addEventListener("click",k=>{k.target===k.currentTarget&&(clearPopups$$module$popups(),n(!1))});g.appendChild(m);for(const k of b)eventListeners$$module$popups.push(k),
k.target.addEventListener(k.type,k.listener);null!=e&&onclosefuncs$$module$popups.push(e);document.body.appendChild(g)})}function clearPopups$$module$popups(){for(const a of eventListeners$$module$popups)a.target?.removeEventListener?.(a.type,a.listener);for(const a of onclosefuncs$$module$popups)a();onclosefuncs$$module$popups.length=0;eventListeners$$module$popups.length=0;document.querySelectorAll("[usy-overlay]").forEach(a=>a.remove())}var module$popups={};module$popups.clearPopups=clearPopups$$module$popups;
module$popups.createPopup=createPopup$$module$popups;const defaults$$module$main={FRHigher:2E4,FRLower:20,colourTolerance:67,PPO:48,delimitation:"tab",lowFRExport:20,highFRExport:2E4,SPLHigher:"",SPLLower:""},MAGNIFICATION$$module$main=3;document.getElementById("restoreDefault").addEventListener("click",()=>{resetToDefault$$module$main();createPopup$$module$popups("Restored settings to default")});function resetToDefault$$module$main(){for(const a in defaults$$module$main)document.getElementById(a).value=defaults$$module$main[a]}
let sizeRatio$$module$main,width$$module$main,height$$module$main,lineWidth$$module$main,CURRENT_MODE$$module$main=null,MODE_RESET_CB$$module$main=null;const glass$$module$main=document.getElementById("glass");glass$$module$main.img=glass$$module$main.querySelector("img");glass$$module$main.setColour=a=>{glass$$module$main.style.borderColor=`rgb(${a})`};
glass$$module$main.updateImage=()=>{image$$module$main.isValid()&&(glass$$module$main.img.src=image$$module$main.src,glass$$module$main.img.width=image$$module$main.clientWidth*MAGNIFICATION$$module$main,glass$$module$main.img.height=image$$module$main.clientHeight*MAGNIFICATION$$module$main)};
const waitingOverlay$$module$main={createOverlay:()=>document.querySelector('.waiting-overlay[data-for="trace"]').classList.add("enabled"),removeOverlays:()=>document.querySelector('.waiting-overlay[data-for="trace"]').classList.remove("enabled")},lines$$module$main={parent:document.getElementById("lines"),lines:{xHigh:document.getElementById("xHigh"),xLow:document.getElementById("xLow"),yHigh:document.getElementById("yHigh"),yLow:document.getElementById("yLow")},updateLinePosition:(a,b)=>{const c=
a.dataset.direction;a.nextElementSibling.setAttribute(c,b);a.setAttribute(`${c}1`,b);a.setAttribute(`${c}2`,b)},updateLineWidth:()=>{for(const a of lines$$module$main.parent.querySelectorAll("line"))a.setAttribute("stroke-width",sizeRatio$$module$main);for(const a of lines$$module$main.parent.querySelectorAll("text"))a.setAttribute("font-size",`${1.3*sizeRatio$$module$main}em`)},getPosition:a=>parseFloat(a.getAttribute(`${a.dataset.direction}1`)),setPosition:(a,b)=>{const c=lines$$module$main.lines,
d=lines$$module$main.getPosition(c[a.dataset.other]),e="x"===a.dataset.direction?width$$module$main:height$$module$main;a===c.xHigh||a===c.yLow?lines$$module$main.updateLinePosition(a,Math.max(d+1,Math.min(e-1,b))):lines$$module$main.updateLinePosition(a,Math.max(1,Math.min(d-1,b)))},showLines:()=>lines$$module$main.parent.classList.remove("hidden"),hideLines:()=>lines$$module$main.parent.classList.add("hidden"),initialiseTextPosition:()=>{lines$$module$main.lines.xHigh.nextElementSibling.setAttribute("y",
height$$module$main/2);lines$$module$main.lines.xLow.nextElementSibling.setAttribute("y",height$$module$main/2);lines$$module$main.lines.yHigh.nextElementSibling.setAttribute("x",width$$module$main/2);lines$$module$main.lines.yLow.nextElementSibling.setAttribute("x",width$$module$main/2)},initialise:()=>{for(const a in lines$$module$main.lines){const b=lines$$module$main.lines[a],[c,d]="x"===b.dataset.direction?["y",height$$module$main]:["x",width$$module$main];b.setAttribute(`${c}1`,0);b.setAttribute(`${c}2`,
d)}lines$$module$main.initialiseTextPosition()}};lines$$module$main.lineArray=[lines$$module$main.lines.xHigh,lines$$module$main.lines.xLow,lines$$module$main.lines.yHigh,lines$$module$main.lines.yLow];
const erasing$$module$main={show:()=>{erasing$$module$main.elem.classList.remove("hidden");erasing$$module$main.svg.setAttributeNS(null,"width","0")},hide:()=>{document.getElementById("erasing").classList.add("hidden")},begin:a=>{erasing$$module$main.show();erasing$$module$main.x=Math.max(Math.min(+a,width$$module$main),0);erasing$$module$main.svg.setAttributeNS(null,"x",a)},move:a=>{a=+a;a<erasing$$module$main.x?(erasing$$module$main.svg.setAttributeNS(null,"width",`${erasing$$module$main.x-a}px`),
erasing$$module$main.svg.setAttributeNS(null,"x",a)):(erasing$$module$main.svg.setAttributeNS(null,"width",`${a-erasing$$module$main.x}px`),erasing$$module$main.svg.setAttributeNS(null,"x",erasing$$module$main.x))},finish:a=>{a=Math.max(Math.min(+a,width$$module$main),0);worker$$module$main.eraseRegion(...(erasing$$module$main.x<a?[erasing$$module$main.x,a]:[a,erasing$$module$main.x]));erasing$$module$main.svg.setAttributeNS(null,"width","0")},init:()=>{erasing$$module$main.elem=document.getElementById("erasing");
erasing$$module$main.svg=erasing$$module$main.elem.firstElementChild}};erasing$$module$main.init();const image$$module$main=document.getElementById("uploadedImage");image$$module$main.getMouseCoords=a=>{const b=image$$module$main.getBoundingClientRect(),c=a.clientX;a=a.clientY;return{x:c,y:a,xRel:c-b.left,yRel:a-b.top}};image$$module$main.isValid=()=>image$$module$main.src.startsWith("blob:");
image$$module$main.saveLines=()=>{const a=imageMap$$module$main.get(image$$module$main.src),b={};if(a){for(const c in lines$$module$main.lines)b[c]=lines$$module$main.getPosition(lines$$module$main.lines[c]);a.lines=b}};image$$module$main.loadLines=()=>{const a=imageMap$$module$main.get(image$$module$main.src).lines;for(const b in lines$$module$main.lines)lines$$module$main.setPosition(lines$$module$main.lines[b],a[b]);lines$$module$main.initialise();lines$$module$main.showLines()};
const preferences$$module$main={SPLHigher:()=>document.getElementById("SPLHigher").value,SPLLower:()=>document.getElementById("SPLLower").value,FRHigher:()=>document.getElementById("FRHigher").value,FRLower:()=>document.getElementById("FRLower").value,snapToLines:()=>document.getElementById("snapToLines").checked,colourTolerance:()=>document.getElementById("colourTolerance").value||defaults$$module$main.colourTolerance,PPO:()=>document.getElementById("PPO").value||defaults$$module$main.ppo,delimitation:()=>
document.getElementById("delimitation").value||defaults$$module$main.delimitation,lowFRExport:()=>document.getElementById("lowFRExport").value||defaults$$module$main.lowFRExport,highFRExport:()=>document.getElementById("highFRExport").value||defaults$$module$main.highFRExport},indefinitePopup$$module$main=a=>{createPopup$$module$popups(a).then(b=>indefinitePopup$$module$main(a)).catch(b=>indefinitePopup$$module$main(a))},buttons$$module$main={resetButtons:()=>{document.querySelectorAll("#sidebar [data-default]").forEach(a=>
{a.textContent=a.dataset.default});CURRENT_MODE$$module$main=null;MODE_RESET_CB$$module$main?.()},enableButtons:()=>{document.querySelectorAll("[data-disabled]").forEach(a=>{a.disabled=!1})},disableButtons:()=>{document.querySelectorAll("[data-disabled]").forEach(a=>{a.disabled=!0})},toggleHistory:({undo:a,redo:b})=>{document.getElementById("undo").disabled=!a;document.getElementById("redo").disabled=!b}},MODE_BUTTON_IDS=["selectPath","selectPoint","eraseRegion"],ENABLE_CALLBACK={path:lines$$module$main.hideLines,
point:lines$$module$main.hideLines,erase:()=>{lines$$module$main.hideLines();erasing$$module$main.show()}},DISABLE_CALLBACK={path:lines$$module$main.showLines,point:lines$$module$main.showLines,erase:()=>{erasing$$module$main.hide();lines$$module$main.showLines()}},cb=a=>{a=a.target;const b=a.dataset.mode,c=JSON.parse(JSON.stringify(CURRENT_MODE$$module$main));buttons$$module$main.resetButtons();c===b?(MODE_RESET_CB$$module$main?.(),CURRENT_MODE$$module$main=null):(a.textContent=a.dataset.active,
MODE_RESET_CB$$module$main?.(),MODE_RESET_CB$$module$main=DISABLE_CALLBACK[b],CURRENT_MODE$$module$main=b,ENABLE_CALLBACK[b]())};for(const a of MODE_BUTTON_IDS)document.getElementById(a).addEventListener("click",cb);
const worker$$module$main={worker:(()=>{const a=new Worker("./worker.min.js");a.onmessage=b=>{b=b.data;const c=b.type;switch(c){case "exportTrace":const d=document.createElement("a"),e=URL.createObjectURL(new Blob([b.export],{type:"text/plain;charset=utf-8"}));d.href=e;d.download="trace.txt";document.body.appendChild(d);d.click();setTimeout(()=>{document.body.removeChild(d);window.URL.revokeObjectURL(e)},0);break;case "error":waitingOverlay$$module$main.removeOverlays();indefinitePopup$$module$main(b.message);
break;case "getHistoryStatus":buttons$$module$main.toggleHistory(b);break;case "setData":console.timeEnd("Initialise image");break;default:image$$module$main.src===b.src&&("getPixelColour"===c?glass$$module$main.setColour(b.pixelColour):"snapLine"===c?lines$$module$main.setPosition(lines$$module$main.lines[b.line.name],b.line.position):(graphs$$module$main.setTracePath(b.svg),waitingOverlay$$module$main.removeOverlays(),worker$$module$main.postMessage({type:"getHistoryStatus"})))}};return a})(),postMessage:a=>
image$$module$main.isValid()&&worker$$module$main.worker.postMessage({src:image$$module$main.src,...a}),setCurrent:()=>worker$$module$main.postMessage({type:"setCurrent"}),removeImage:a=>worker$$module$main.postMessage({type:"removeImage",src:a}),addImage:(a,b)=>{var c=document.createElement("canvas");const d=c.getContext("2d");c.width=a;c.height=b;d.drawImage(image$$module$main,0,0);c=d.getImageData(0,0,a,b);worker$$module$main.postMessage({type:"setData",data:c.data,width:a,height:b},[c.data.buffer])},
clearTrace:()=>worker$$module$main.postMessage({type:"clearTrace"}),undoTrace:()=>worker$$module$main.postMessage({type:"undoTrace"}),redoTrace:()=>worker$$module$main.postMessage({type:"redoTrace"}),eraseRegion:(a,b)=>worker$$module$main.postMessage({type:"eraseRegion",begin:a,end:b}),smoothTrace:()=>worker$$module$main.postMessage({type:"smoothTrace"}),exportTrace:()=>{const a=c=>Object.values(c).some(d=>d&&"object"===typeof d?a(d):null===d||""===d),b={type:"exportTrace",PPO:preferences$$module$main.PPO(),
delim:preferences$$module$main.delimitation(),lowFR:preferences$$module$main.lowFRExport(),highFR:preferences$$module$main.highFRExport(),SPL:{top:preferences$$module$main.SPLHigher(),topPixel:lines$$module$main.getPosition(lines$$module$main.lines.yHigh),bottom:preferences$$module$main.SPLLower(),bottomPixel:lines$$module$main.getPosition(lines$$module$main.lines.yLow)},FR:{top:preferences$$module$main.FRHigher(),topPixel:lines$$module$main.getPosition(lines$$module$main.lines.xHigh),bottom:preferences$$module$main.FRLower(),
bottomPixel:lines$$module$main.getPosition(lines$$module$main.lines.xLow)}};a(b)?createPopup$$module$popups("Please fill in all required values to export (SPL and FR values)"):worker$$module$main.postMessage(b)},addPoint:(a,b)=>worker$$module$main.postMessage({type:"addPoint",x:a,y:b}),autoTrace:()=>{worker$$module$main.postMessage({type:"autoTrace",colourTolerance:preferences$$module$main.colourTolerance()})},trace:(a,b)=>{worker$$module$main.postMessage({type:"trace",x:a,y:b,colourTolerance:preferences$$module$main.colourTolerance()})},
snapLine:(a,b)=>{worker$$module$main.postMessage({type:"snapLine",line:{name:a.id,position:lines$$module$main.getPosition(a),direction:a.dataset.direction},direction:b})},getPixelColour:(a,b)=>worker$$module$main.postMessage({type:"getPixelColour",x:a,y:b}),getCurrentPath:()=>worker$$module$main.postMessage({type:"getCurrentPath"})},graphs$$module$main={updateSize:()=>{for(const a of document.querySelectorAll("svg"))a.setAttribute("width",width$$module$main),a.setAttribute("height",height$$module$main),
a.setAttribute("viewBox",`0 0 ${width$$module$main} ${height$$module$main}`)},setTracePath:a=>{var b=document.getElementById("trace");const c=b.lastElementChild;b=b.firstElementChild;c.setAttribute("d",a);c.setAttribute("stroke","#ff0000");c.setAttribute("stroke-width",lineWidth$$module$main);b.setAttribute("d",a);b.setAttribute("stroke-width",1.5*lineWidth$$module$main)},clearTracePath:()=>{graphs$$module$main.setTracePath("")}};document.getElementById("autoPath").addEventListener("click",worker$$module$main.autoTrace);
document.getElementById("undo").addEventListener("click",worker$$module$main.undoTrace);document.getElementById("redo").addEventListener("click",worker$$module$main.redoTrace);document.getElementById("clearPath").addEventListener("click",worker$$module$main.clearTrace);document.getElementById("export").addEventListener("click",worker$$module$main.exportTrace);document.getElementById("smoothTrace").addEventListener("click",worker$$module$main.smoothTrace);
const imageMap$$module$main=new Map,fileInput$$module$main=document.getElementById("fileInput"),imageQueue$$module$main={elem:document.getElementById("imageQueueInner"),removeSelectedImage:()=>{for(const a of imageQueue$$module$main.elem.querySelectorAll('img[class="selectedImage"]'))a.classList.remove("selectedImage")},deleteImage:a=>{imageMap$$module$main.delete(a.src);worker$$module$main.removeImage(a.src);URL.revokeObjectURL(a.src);a.remove()},scrollToSelected:()=>{imageQueue$$module$main.elem.querySelector('img[class="selectedImage"]').scrollIntoView({inline:"center",
behavior:"smooth"})},addImage:(a,b=!1)=>{const c=document.createElement("img"),d=document.getElementById("imageQueueInner");c.src=a;imageMap$$module$main.set(c.src,{initial:!0});c.addEventListener("dragstart",e=>e.preventDefault());c.addEventListener("click",e=>{e.preventDefault();e.stopPropagation();image$$module$main.saveLines();image$$module$main.src=a;imageQueue$$module$main.removeSelectedImage();c.classList.add("selectedImage");imageQueue$$module$main.scrollToSelected()});c.addEventListener("contextmenu",
e=>{e.preventDefault();c.classList.contains("selectedImage")&&(e=c.nextElementSibling,e||(e=c.previousElementSibling),e?e.click():initAll$$module$main());imageQueue$$module$main.deleteImage(c)});d.appendChild(c);b&&(c.click(),setTimeout(()=>imageQueue$$module$main.scrollToSelected(),50));return c},toggle:a=>{a=a.target;document.getElementById("imageContainer").addEventListener("transitionend",()=>window.dispatchEvent(new Event("resize")),{once:!0});a.textContent===a.dataset.active?(a.textContent=
a.dataset.default,a.removeAttribute("active")):(a.textContent=a.dataset.active,a.setAttribute("active",""))}};document.getElementById("removeImage").addEventListener("click",()=>document.querySelector('img[class="selectedImage"]')?.dispatchEvent(new Event("contextmenu")));document.getElementById("toggleImageQueue").addEventListener("click",imageQueue$$module$main.toggle);resetToDefault$$module$main();initAll$$module$main();
fileInput$$module$main.loadFiles=a=>{a=Array.from(a).filter(c=>c.type.startsWith("image/"));const b=a.length-1;0<a.length?(clearPopups$$module$popups(),a.forEach((c,d)=>{c=URL.createObjectURL(c);imageQueue$$module$main.addImage(c,d===b)})):createPopup$$module$popups("Invalid image/file(s) added!")};fileInput$$module$main.addEventListener("change",a=>{fileInput$$module$main.loadFiles(a.target.files)});image$$module$main.addEventListener("dragstart",a=>a.preventDefault());
document.getElementById("fileInputButton").addEventListener("click",()=>fileInput$$module$main.click());document.addEventListener("paste",a=>{a.preventDefault();const b=new DataTransfer;for(const c of(a.clipboardData||window?.clipboardData).items)"file"===c.kind&&b.items.add(c.getAsFile());0<b.files.length&&fileInput$$module$main.loadFiles(b.files)});multiEventListener$$module$main("dragover",document.body,a=>{a.preventDefault();a.dataTransfer.dropEffect="copy";document.body.classList.add("lowOpacity")});
multiEventListener$$module$main(["dragleave","dragend"],document.body,a=>{a.preventDefault();document.body.classList.remove("lowOpacity")});multiEventListener$$module$main("drop",document.body,a=>{a.preventDefault();document.body.classList.remove("lowOpacity");fileInput$$module$main.loadFiles(a.dataTransfer.files)});
image$$module$main.addEventListener("pointermove",a=>{if("erase"!==CURRENT_MODE$$module$main){a.preventDefault();const b=image$$module$main.parentElement,c=b.getBoundingClientRect();a=image$$module$main.getMouseCoords(a);glass$$module$main.style.left=`${Math.min(a.x-c.left,b.clientWidth-glass$$module$main.clientWidth)}px`;glass$$module$main.style.top=`${Math.min(a.y-c.top,b.clientHeight-glass$$module$main.clientHeight)}px`;glass$$module$main.img.style.left=`${-1*(a.xRel*MAGNIFICATION$$module$main-
glass$$module$main.clientWidth/2)}px`;glass$$module$main.img.style.top=`${-1*(a.yRel*MAGNIFICATION$$module$main-glass$$module$main.clientHeight/2)}px`;worker$$module$main.getPixelColour(a.xRel*sizeRatio$$module$main,a.yRel*sizeRatio$$module$main);glass$$module$main.classList.remove("hidden")}});multiEventListener$$module$main(["pointerup","pointerleave","pointerout","pointercancel"],image$$module$main,()=>glass$$module$main.classList.add("hidden"));let selectedLine=null,getCoords=image$$module$main.getMouseCoords;
lines$$module$main.parent.addEventListener("pointerdown",a=>{const b=getCoords(a);a={x:.02*width$$module$main,y:.02*height$$module$main};for(var c of lines$$module$main.lineArray)c.offset=b[`${c.dataset.direction}Rel`]*sizeRatio$$module$main-lines$$module$main.getPosition(c);c=lines$$module$main.lineArray.reduce((d,e)=>Math.abs(e.offset)<Math.abs(d.offset)?e:d,lines$$module$main.lineArray[0]);Math.abs(c.offset)<a[c.dataset.direction]&&(selectedLine=c)});
lines$$module$main.parent.addEventListener("pointermove",a=>{selectedLine&&lines$$module$main.setPosition(selectedLine,getCoords(a)[`${selectedLine.dataset.direction}Rel`]*sizeRatio$$module$main-selectedLine.offset)});multiEventListener$$module$main(["pointerup","pointerleave","pointercancel"],lines$$module$main.parent,a=>{a.preventDefault();selectedLine=null});let holdInterval,line$jscomp$14,snap=preferences$$module$main.snapToLines();
document.getElementById("snapToLines").addEventListener("change",()=>snap=preferences$$module$main.snapToLines());
document.getElementById("buttonSection").addEventListener("pointerdown",a=>{const b=a.target,c=b.parentNode;!holdInterval&&c.classList.contains("moveButtons")&&(a.preventDefault(),line$jscomp$14=lines$$module$main.lines[c.dataset.for],snap?worker$$module$main.snapLine(lines$$module$main.lines[c.dataset.for],parseInt(b.dataset.direction)):holdInterval=setInterval(()=>{lines$$module$main.setPosition(line$jscomp$14,lines$$module$main.getPosition(line$jscomp$14)+parseInt(b.dataset.direction)*sizeRatio$$module$main)},
10))});multiEventListener$$module$main(["pointerup","pointerleave","pointerout","pointercancel"],document.getElementById("buttonSection"),a=>{a.preventDefault();clearInterval(holdInterval);holdInterval=null});window.addEventListener("resize",()=>{updateSizeRatio$$module$main();lines$$module$main.updateLineWidth();glass$$module$main.updateImage()});const callbacks={path:worker$$module$main.trace,point:worker$$module$main.addPoint};
image$$module$main.addEventListener("click",a=>{null!=CURRENT_MODE$$module$main&&(a=image$$module$main.getMouseCoords(a),callbacks[CURRENT_MODE$$module$main]?.(a.xRel*sizeRatio$$module$main,a.yRel*sizeRatio$$module$main))});let holding=!1;
image$$module$main.addEventListener("pointerdown",a=>{"erase"===CURRENT_MODE$$module$main&&(a.preventDefault(),holding=!0,erasing$$module$main.begin(image$$module$main.getMouseCoords(a).xRel*sizeRatio$$module$main),document.addEventListener("pointerup",eraseStop,{once:!0}))});image$$module$main.addEventListener("pointermove",a=>{holding&&"erase"===CURRENT_MODE$$module$main&&(a.preventDefault(),erasing$$module$main.move(image$$module$main.getMouseCoords(a).xRel*sizeRatio$$module$main))});
const eraseStop=a=>{holding&&"erase"===CURRENT_MODE$$module$main&&(a.preventDefault(),holding=!1,erasing$$module$main.finish(image$$module$main.getMouseCoords(a).xRel*sizeRatio$$module$main))};
image$$module$main.addEventListener("load",()=>{document.getElementById("defaultMainText").classList.add("hidden");buttons$$module$main.enableButtons();buttons$$module$main.resetButtons();updateSizes$$module$main();erasing$$module$main.hide();graphs$$module$main.updateSize();graphs$$module$main.clearTracePath();glass$$module$main.updateImage();const a=imageMap$$module$main.get(image$$module$main.src);a.initial?(waitingOverlay$$module$main.createOverlay(),console.time("Initialise image"),worker$$module$main.addImage(width$$module$main,
height$$module$main),lines$$module$main.setPosition(lines$$module$main.lines.xHigh,width$$module$main),lines$$module$main.setPosition(lines$$module$main.lines.xLow,0),lines$$module$main.setPosition(lines$$module$main.lines.yHigh,0),lines$$module$main.setPosition(lines$$module$main.lines.yLow,height$$module$main),lines$$module$main.initialise(),lines$$module$main.showLines(),worker$$module$main.snapLine(lines$$module$main.lines.xHigh,-1),worker$$module$main.snapLine(lines$$module$main.lines.xLow,1),
worker$$module$main.snapLine(lines$$module$main.lines.yHigh,1),worker$$module$main.snapLine(lines$$module$main.lines.yLow,-1),worker$$module$main.autoTrace(),a.initial=!1):(worker$$module$main.setCurrent(),image$$module$main.loadLines(),worker$$module$main.getCurrentPath());lines$$module$main.updateLineWidth()});
const pointerDown=new PointerEvent("pointerdown",{bubbles:!0}),pointerUp=new PointerEvent("pointerup",{bubbles:!0}),keydownMap={escape:clearPopups$$module$popups,z:a=>a.ctrlKey&&document.getElementById(a.shiftKey?"redo":"undo").click(),a:()=>document.getElementById("autoPath").click(),t:()=>document.getElementById("selectPath").click(),p:()=>document.getElementById("selectPoint").click(),h:()=>document.getElementById("toggleImageQueue").click(),s:a=>document.getElementById(a.ctrlKey?"export":"smoothTrace").click(),
e:()=>document.getElementById("eraseRegion").click(),enter:()=>document.getElementById("fileInputButton").click(),"delete":()=>document.getElementById("removeImage").click(),backspace:()=>document.getElementById("clearPath").click(),arrowup:a=>document.querySelector(`[data-for="y${a.shiftKey?"Low":"High"}"] > [data-direction="-1"]`).dispatchEvent(pointerDown),arrowdown:a=>document.querySelector(`[data-for="y${a.shiftKey?"Low":"High"}"] > [data-direction="1"]`).dispatchEvent(pointerDown),arrowleft:a=>
document.querySelector(`[data-for="x${a.shiftKey?"Low":"High"}"] > [data-direction="-1"]`).dispatchEvent(pointerDown),arrowright:a=>document.querySelector(`[data-for="x${a.shiftKey?"Low":"High"}"] > [data-direction="1"]`).dispatchEvent(pointerDown)},keyupMap={arrowup:a=>document.querySelector(`[data-for="y${a.shiftKey?"Low":"High"}"] > [data-direction="-1"]`).dispatchEvent(pointerUp),arrowdown:a=>document.querySelector(`[data-for="y${a.shiftKey?"Low":"High"}"] > [data-direction="1"]`).dispatchEvent(pointerUp),
arrowleft:a=>document.querySelector(`[data-for="x${a.shiftKey?"Low":"High"}"] > [data-direction="-1"]`).dispatchEvent(pointerUp),arrowright:a=>document.querySelector(`[data-for="x${a.shiftKey?"Low":"High"}"] > [data-direction="1"]`).dispatchEvent(pointerUp)};document.addEventListener("keydown",a=>{const b=keydownMap[a.key.toLowerCase()];!a.target.closest("input")&&b&&(a.preventDefault(),b(a))});
document.addEventListener("keyup",a=>{const b=keyupMap[a.key.toLowerCase()];!a.target.closest("input")&&b&&(a.preventDefault(),b(a))});function multiEventListener$$module$main(a,b,c){"object"!==typeof a&&(a=[a]);a.forEach(d=>b.addEventListener(d,c))}
function initAll$$module$main(){document.getElementById("defaultMainText").classList.remove("hidden");buttons$$module$main.disableButtons();buttons$$module$main.resetButtons();lines$$module$main.hideLines();erasing$$module$main.hide();graphs$$module$main.clearTracePath();image$$module$main.src=""}
function updateSizes$$module$main(){width$$module$main=image$$module$main.naturalWidth;height$$module$main=image$$module$main.naturalHeight;lineWidth$$module$main=.003*Math.max(width$$module$main,height$$module$main);updateSizeRatio$$module$main()}function updateSizeRatio$$module$main(){sizeRatio$$module$main=width$$module$main/image$$module$main.clientWidth}const minVal=a=>{a=a.target;a.value<a.min&&(a.value=a.min)};
for(const a of["FRLower","colourTolerance","lowFRExport"])document.getElementById(a).addEventListener("change",minVal);var module$main={};const TUTORIAL_VERSION$$module$tutorial=2,USER_TUTORIAL_VERSION$$module$tutorial=(()=>{try{return parseInt(window.localStorage.getItem("USER_TUTORIAL_VERSION")??0)}catch{return 0}})(),TUTORIAL_PAGES$$module$tutorial=[{header:"Welcome to UsyTrace",body:"<h2>Here you can trace frequency responses from images</h2>\n\nAll you need to know, as well as keybindings are on the next few pages"},{header:"Tracing",body:"<h3>Auto Trace (a)</h3>\nTries to automatically select a line in the image, may fail, applied automatically upon image import\n    \n<h3>Select Path (t)</h3>\nTraces to the right of the point you click on the image, can complete a trace by starting from the left side of the frequency response and clicking to the right if it misses a part\n\n<h3>Add Point (p)</h3>\nAdd a single point to the trace manually, useful for situations where Select Path or Auto Trace Fails\n\n<h3>Smooth Trace (s)</h3>\nSmooths out sudden bumps in the traced line, good for if the original image is bad and the traced line is inconsistent\n\n<h3>Undo (Ctrl + z)</h3>\nGoes back to the previous trace step, saves add point, tracing, and clearing history\n\n<h3>Redo (Ctrl + Shift + z)</h3>\nGoes back to recently undone trace steps\n\n<h3>Erase Region (e)</h3>\nSelect a region to erase a trace from by dragging a box around the area\n\n<h3>Clear Path (Backspace)</h3>\nClears the current trace on screen, can go back using Undo"},
{header:"Exporting",body:"Align <b>High</b> and <b>Low</b> lines with given values in their respective axis, then input the respective values into <b>Higher SPL</b>, <b>Lower SPL</b>, <b>Higher Frequency</b> and <b>Lower Frequency</b>.\n\nThe lines can be moved with the arrow keys, defaulting to the <b>High</b> line for each axis, but can control the <b>Low</b> line by holding <b>Shift</b>\n\n<h3>Trace Settings</h3>     \nAdjust the <b>Minimum Exported Frequency</b>, <b>Maximum Exported Frequency</b>, <b>Points Per Octave of the exported data</b>, and <b>the delimitation of the exported data</b>\n\nThen <b>Export Trace</b> will give you the result"},
{header:"Settings",body:"<h3>Buttons Snap To Axis</h3>\nwhether the buttons underneath the Export values will attempt to snap the lines to their axis, or to enable smooth manual movement\n    \n<h3>Colour Tolerance</h3>\nRaise if line is not being detected, Lower if line is jagged or detecting multiple lines"},{header:"Miscellaneous",body:"You can <b>drop</b>, or <b>choose any amount of images</b> you like into the site, other than with pasting, as that only supports one image at a time.\n    \nLoaded images show in the image queue on the bottom, and can be removed by right-clicking them (long hold on mobile), pressing <b>Remove</b> or pressing the <b>Delete</b> key on your keyboard"}];
let CURRENT_PAGE$$module$tutorial=0;TUTORIAL_VERSION$$module$tutorial!==USER_TUTORIAL_VERSION$$module$tutorial&&showTutorial$$module$tutorial();
function showTutorial$$module$tutorial(){function a(){CURRENT_PAGE$$module$tutorial>=TUTORIAL_PAGES$$module$tutorial.length-1?h.textContent="End Tutorial":0>=CURRENT_PAGE$$module$tutorial?(h.textContent="Begin Tutorial",f.disabled=!0,f.textContent=""):(h.textContent="Next",f.disabled=!1,f.textContent="Previous");b()}function b(){const l=TUTORIAL_PAGES$$module$tutorial[CURRENT_PAGE$$module$tutorial]??TUTORIAL_PAGES$$module$tutorial[0];n.textContent=l.header;m.innerHTML=l.body}CURRENT_PAGE$$module$tutorial=
0;const c=document.createElement("div"),d=document.createElement("div");d.classList.add("popupButtons");c.classList.add("popupText");const e=document.createElement("div"),n=document.createElement("h1"),g=document.createElement("button");e.classList.add("headContainer");g.classList.add("standardButton");g.textContent="\ud800\udf22";g.addEventListener("click",clearPopups$$module$popups);e.append(n,g);const m=document.createElement("p");c.append(m);const h=document.createElement("button"),f=document.createElement("button");
h.classList.add("standardButton");f.classList.add("standardButton");h.addEventListener("click",()=>{CURRENT_PAGE$$module$tutorial>=TUTORIAL_PAGES$$module$tutorial.length-1&&g.click();++CURRENT_PAGE$$module$tutorial;a()});f.addEventListener("click",()=>{--CURRENT_PAGE$$module$tutorial;a()});a();b();d.append(f,h);createPopup$$module$popups([e,c,d],{buttons:d,classes:["fixedSize"],onclose:finishTutorial$$module$tutorial})}
function finishTutorial$$module$tutorial(){window.localStorage.setItem("USER_TUTORIAL_VERSION",TUTORIAL_VERSION$$module$tutorial.toString())}document.getElementById("tutorial").addEventListener("click",showTutorial$$module$tutorial);var module$tutorial={};document.getElementById("about").addEventListener("click",()=>{const a=document.createElement("div");a.classList.add("popupInner","about");const b=document.createElement("div");let c=null;const d=document.createElement("div");d.classList.add("logo");b.appendChild(d);b.classList.add("logoWrapper");var e=document.createElement("div"),n=document.createElement("div"),g=document.createElement("div");e.classList.add("wall");n.classList.add("wall");g.classList.add("wall");var m=document.createElement("div");
for(var h=0;16>h;++h){var f=document.createElement("div");f.style.setProperty("--i",h);m.appendChild(f)}m.classList.add("line");d.append(e,n,g,m);let l,k;b.addEventListener("pointermove",q=>{q.target===q.currentTarget&&(clearTimeout(l),c=c??b.getBoundingClientRect(),d.style.setProperty("--dy",`${(q.clientX-c.left-c.width/2)/5}deg`),d.style.setProperty("--dx",`${(c.height/2-(q.clientY-c.top))/5}deg`),null==k&&(d.classList.add("quick"),k=setTimeout(()=>{d.classList.add("no-transition");d.classList.remove("quick")},
200)))});b.addEventListener("pointerleave",()=>{clearTimeout(k);k=null;l=setTimeout(()=>{d.classList.remove("quick");d.classList.remove("no-transition");d.style.removeProperty("--dx");d.style.removeProperty("--dy")},100)});b.addEventListener("dragstart",q=>q.preventDefault());e=document.createElement("div");e.classList.add("popupInner");n=document.createElement("h2");n.textContent="UsyTrace";g=document.createElement("h3");g.textContent="made with \u2764\ufe0f by usy";m=document.createElement("h6");
m.textContent="i made the 3d icon while procrastinating studying for exams, try hovering over it or dragging it";h=document.createElement("div");h.textContent="Find me at:";f=document.createElement("div");f.textContent="Discord: @usy_";const r=document.createElement("div");var p=document.createElement("a");r.textContent="Email: ";p.href="mailto:usy@usyless.uk";p.textContent="usy@usyless.uk";r.appendChild(p);p=document.createElement("div");const t=document.createElement("a");p.textContent="GitHub: ";
t.href="https://github.com/usyless/UsyTrace/issues";t.textContent="usyless";p.appendChild(t);e.append(n,g,h,f,r,p,m);a.append(b,e);createPopup$$module$popups(a,{listeners:[{target:window,type:"resize",listener:()=>{c=b.getBoundingClientRect()}}]})});var module$about={};"serviceWorker"in navigator&&!["localhost","127.0.0.1"].includes(location.hostname)&&(navigator.serviceWorker.addEventListener("controllerchange",()=>{window.location.reload()}),navigator.serviceWorker.register("./service-worker.js").then(a=>{a.addEventListener("updatefound",()=>{const b=a.installing;b.addEventListener("statechange",()=>{if("installed"===b.state&&navigator.serviceWorker.controller){const c=document.getElementById("updateAvailable");c.addEventListener("click",()=>{b.postMessage({action:"skipWaiting"})});
c.classList.remove("hidden")}})})}));
